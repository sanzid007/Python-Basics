# -*- coding: utf-8 -*-
"""MatPlotLib.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16YZ9tQSaawmdfcUEHzVh1e4Qlpcw1rGS
"""

from matplotlib import pylab as plt
import numpy as np

#------------------------------------------------------------
x = np.array([0,10])
y = np.array([0,100])
plt.plot(x,y, 'r')            # THIRD PARAMETER r STANDS FOR RED COLOR
plt.show()                    # COLOR CODE ARE ALSO APPLICABLE
#------------------------------------------------------------
y1 = np.array([7,2,5,1,9,6])
plt.plot(y1, marker='*')       # MARKER HIGHLIGHTS THE Y-POINTS
plt.show()                    # AVAILABLE MARKERS * , D(DIAMOND) X(X-SHAPE) P(PENTAGON) O(O-SHAPE)
#------------------------------------------------------------
plt.plot(y, linestyle='dotted')
plt.show()                    # AVAILABLE LINESTYLES- DOTTED, DASHED, SOLID)
#------------------------------------------------------------
# PLOT MULTIPLE LINE IN ONE GRAPH
x1 = np.array([3,7,1,4,9])
y1 = np.array([8,2,4,1,7])

x2 = np.array([1,3,8,2,6])
y2 = np.array([7,9,3,5,1])

plt.plot(x1,y1, 'r',x2,y2, 'g') # r - RED & g - GREEN
plt.show()
#------------------------------------------------------------
# ADD GRID & LABELS
plt.plot(x,y)
plt.grid(linestyle='dashed', linewidth=0.5, color= 'g')
plt.title("Distance VS Time Graph")
plt.xlabel("Time")
plt.ylabel("Distance")
plt.show()
#------------------------------------------------------------
# SCATTERED PLOT

plt.scatter(x1,y1)
plt.scatter(x2,y2)
plt.show()
#------------------------------------------------------------
# BAR CHART
labels = np.array(["Sydney", "Washington", "Dhaka", "Shanghai", "Moscow"])
value = np.array([7,6,1,5,8])
plt.bar(labels, value)
plt.show()
#------------------------------------------------------------
# PIE CHART

pLabels = ["Sleep", "Leisure", "Entertainment", "Productive", "Others"]
hours = np.array([6,2,2,8,6])
pColors = ["black", "red", "yellow", "blue", "hotpink"]
plt.pie(hours, labels = pLabels, colors = pColors, explode = [0,0,0,0.2,0])
plt.legend()
plt.show()